[tool.poetry]
name = "banorte-chatbot"
version = "0.1.0"
description = ""
authors = ["Rafael Zamora <rafa.zamora.rals@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
pydantic-settings = "^2.2.1"
gradio = "^5.0.2"
openai = "^1.51.2"
pandas = "^2.2.3"
scipy = "^1.14.1"
langchain = "^0.3.3"
langchain-community = "^0.3.2"
pypdf = "^5.0.1"
langchain-openai = "^0.2.2"
python-telegram-bot = "^21.6"
whisper = "^1.1.10"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.black]
line-length = 120
target-version = ['py310']

[tool.poetry.group.testing.dependencies]
coverage = "^7.4.0"
pytest = "^7.4.4"

[tool.ruff]
src = ["src"]
target-version = "py310"
select = ["ALL"]
ignore = [
    "ANN",    # Type hints related, let mypy/pyright handle these.
    "COM812", # "Trailing comma missing". If black is happy, I'm happy.
    "D104",   # Missing docstring in public package
    "D100",   # Missing docstring in public module
    "E501",   # "Line too long". If black is happy, I'm happy.
    "EM101",  # "Exception must not use a string literal, assign to variable first"
    "EM102",  # "Exception must not use an f-string literal, assign to variable first"
    "G004",   # Logging statement uses f-string
    "SIM108", # "Use ternary operator ...". Ternary is harmful for readability in some cases.
    "TRY003", # "Avoid specifying long messages outside the exception class"
    "FIX002", # Allow TODOs in the code
    "TD002",  # Missing author in TODO
    "TD003",  # Allow simples TODOs
    "TRY200",
    "A002",   #
    "A003",   #
    "B008",   # Do not perform function call `function` in argument defaults
    "D",      # Documentation,
    "FBT002", # Boolean default positional argument in function definition
    "PT009",  # Use asserts in test
    "ARG001", # TODO: add log to request
]

[tool.ruff.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.isort]
known-first-party = ["src"]

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.coverage.run]
omit = ["src/tests/*", "src/config/*", "__init__*"]

[tool.pytest.ini_options]
pythonpath = ["./src"]